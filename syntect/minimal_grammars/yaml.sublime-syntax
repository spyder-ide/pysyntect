%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: YAML
file_extensions:
  - clang-format
  - eslintrc
  - eyaml
  - eyml
  - yaml
  - yamllint
  - yaml.erb
  - yml
  - yml.erb
  - sls
  - stylelintrc
  - sublime-syntax
  - Boxfile
  - ksy
first_line_match: ^(#cloud-config|---)
scope: source.yaml
contexts:
  main:
    - include: erb
    - include: comment
    - match: \t+
      scope: invalid.illegal.whitespace.yaml
    - match: ^---
      scope: punctuation.definition.directives.end.yaml
    - match: ^\.\.\.
      scope: punctuation.definition.document.end.yaml
    - match: '^(\s*)(?:(-)|(?:(?:(-)(\s*))?([^!@#%&*>,][^:#]*\S)\s*(:)))(?:\s+((!)[^!\s]+))?\s+(?=\||>)'
      captures:
        2: punctuation.definition.entry.yaml
        3: punctuation.definition.entry.yaml
        5: entity.name.tag.yaml
        6: punctuation.separator.key-value.yaml
        7: keyword.other.tag.local.yaml
        8: punctuation.definition.tag.local.yaml
      push:
        - meta_content_scope: string.unquoted.block.yaml
        - match: '^((?!$)(?!\1\s+)|(?=\s\4(-|[^\s!@#%&*>,].*:\s+)))'
          pop: true
        - match: \G
          push:
            - match: $
              pop: true
            - include: comment
        - include: constants
        - include: erb
    - match: '^(\s*)([^!@#%&*>,][^:#]*\S)\s*(:)(?:\s+((!)[^!\s]+))?\s+(?=\||>)'
      captures:
        2: entity.name.tag.yaml
        3: punctuation.separator.key-value.yaml
        4: keyword.other.tag.local.yaml
        5: punctuation.definition.tag.local.yaml
      push:
        - meta_content_scope: string.unquoted.block.yaml
        - match: ^(?!$)(?!\1\s+)
          pop: true
        - match: \G
          push:
            - match: $
              pop: true
            - include: comment
        - include: constants
        - include: erb
    - match: (<<)\s*(:)\s+(.+)$
      captures:
        1: entity.name.tag.merge.yaml
        2: punctuation.separator.key-value.yaml
    - match: '(?>^(\s*)(-)?\s*)([^!{@#%&*>,''"][^#]*?)(:)\s+((!!)omap)?'
      captures:
        2: punctuation.definition.entry.yaml
        3: entity.name.tag.yaml
        4: punctuation.separator.key-value.yaml
        5: keyword.other.omap.yaml
        6: punctuation.definition.tag.omap.yaml
      push:
        - match: '^((?!\1\s+)|(?=\1\s*(-|[^!@#%&*>,].*:\s+|#)))'
          pop: true
        - include: scalar-content
    - match: '^(\s*)(-)?\s*(?:(('')([^'']*?)(''))|((")([^"]*?)(")))(:)\s+((!!)omap)?'
      captures:
        10: punctuation.definition.string.end.yaml
        11: punctuation.separator.key-value.yaml
        12: keyword.other.omap.yaml
        13: punctuation.definition.tag.omap.yaml
        2: punctuation.definition.entry.yaml
        3: string.quoted.single.yaml
        4: punctuation.definition.string.begin.yaml
        5: entity.name.tag.yaml
        6: punctuation.definition.string.end.yaml
        7: string.quoted.double.yaml
        8: punctuation.definition.string.begin.yaml
        9: entity.name.tag.yaml
      push:
        - match: '^((?!\1\s+)|(?=\1\s*(-|[^!@#%&*>,].*:\s+|#)))'
          pop: true
        - include: scalar-content
    - match: '^(\s*)(-)\s+(?:((!!)omap)|((!)[^!\s]+)|(?![!@#%&*>,]))'
      captures:
        2: punctuation.definition.entry.yaml
        3: keyword.other.omap.yaml
        4: punctuation.definition.tag.omap.yaml
        5: keyword.other.tag.local.yaml
        6: punctuation.definition.tag.local.yaml
      push:
        - match: '^((?!\1\s+)|(?=\1\s*(-|[^!@#%&*>,].*:\s+|#)))'
          pop: true
        - include: scalar-content
    - include: variables
    - include: strings
  comment:
    - match: '(?<=^|\s)#(?!{)'
      captures:
        0: punctuation.definition.comment.yaml
      push:
        - meta_scope: comment.line.number-sign.yaml
        - match: $
          pop: true
  constants:
    - match: (?<=\s)(true|false|null|True|False|Null|TRUE|FALSE|NULL|~)(?=\s*$)
      scope: constant.language.yaml
  date:
    - match: '([0-9]{4}-[0-9]{2}-[0-9]{2})\s*($|(?=#)(?!#{))'
      captures:
        1: constant.other.date.yaml
  erb:
    - match: <%+(?!>)=?
      captures:
        0: punctuation.definition.embedded.begin.ruby
      push:
        - meta_scope: meta.embedded.line.ruby
        - meta_content_scope: source.ruby.rails
        - match: (%)>
          captures:
            0: punctuation.definition.embedded.end.ruby
            1: source.ruby.rails
          pop: true
        - match: (#).*?(?=%>)
          scope: comment.line.number-sign.ruby
          captures:
            1: punctuation.definition.comment.ruby
        - include: scope:source.ruby.rails
  escaped_char:
    - match: '\\u[A-Fa-f0-9]{4}'
      scope: constant.character.escape.yaml
    - match: '\\U[A-Fa-f0-9]{8}'
      scope: constant.character.escape.yaml
    - match: '\\x[0-9A-Fa-f]{2}'
      scope: constant.character.escape.yaml
    - match: '\\[0abtnvfre "/\\N_LP]'
      scope: constant.character.escape.yaml
    - match: '\\(u.{4}|U.{8}|x.{2}|.)'
      scope: invalid.illegal.escape.yaml
  numeric:
    - match: '[-+]?[0-9]+(?=\s*($|#(?!#{)))'
      scope: constant.numeric.integer.yaml
    - match: '0o[0-7]+(?=\s*($|#(?!#{)))'
      scope: constant.numeric.octal.yaml
    - match: '0x[0-9a-fA-F]+(?=\s*($|#(?!#{)))'
      scope: constant.numeric.hexadecimal.yaml
    - match: '[-+]?(.[0-9]+|[0-9]+(.[0-9]*)?)([eE][-+]?[0-9]+)?(?=\s*($|#(?!#{)))'
      scope: constant.numeric.float.yaml
    - match: '[-+]?(.inf|.Inf|.INF)(?=\s*($|#(?!#{)))'
      scope: constant.numeric.float.yaml
    - match: '(.nan|.NaN|.NAN)(?=\s*($|#(?!#{)))'
      scope: constant.numeric.float.yaml
  scalar-content:
    - include: comment
    - match: '!(?=\s)'
      scope: punctuation.definition.tag.non-specific.yaml
    - include: constants
    - include: date
    - include: numeric
    - include: strings
  strings:
    - match: '"'
      captures:
        0: punctuation.definition.string.begin.yaml
      push:
        - meta_scope: string.quoted.double.yaml
        - match: '"'
          captures:
            0: punctuation.definition.string.end.yaml
          pop: true
        - include: escaped_char
        - include: erb
    - match: "'"
      captures:
        0: punctuation.definition.string.begin.yaml
      push:
        - meta_scope: string.quoted.single.yaml
        - match: "''"
          scope: constant.character.escape.yaml
        - include: erb
        - match: "'"
          captures:
            0: punctuation.definition.string.end.yaml
          pop: true
    - match: "`"
      captures:
        0: punctuation.definition.string.begin.yaml
      push:
        - meta_scope: string.interpolated.yaml
        - match: "`"
          captures:
            0: punctuation.definition.string.end.yaml
          pop: true
        - include: escaped_char
        - include: erb
    - match: '[^\s"''\n](?!\s*#(?!{))([^#\n]|((?<!\s)#))*'
      scope: string.unquoted.yaml
  variables:
    - match: (&|\*)\w+$
      scope: variable.other.yaml
      captures:
        1: punctuation.definition.variable.yaml
